name: Docker Image CI

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        dir: [client, server]
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20.x
          cache: npm
          cache-dependency-path: ${{ matrix.dir }}/package-lock.json
      - name: Change to project directory
        run: cd $GITHUB_WORKSPACE && cd ${{ matrix.dir }} && echo "$(ls)"
      - run: cd ${{ matrix.dir }} && npm ci
    #  - name: Testing
    #    run: cd ${{ matrix.dir }} && npm test

  build-client:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1
      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push a docker image
        uses: docker/build-push-action@v5
        with:
          context: ./client
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/dockerhub-client:latest

  build-server:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v4.1.1
      - name: Docker Login
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push a docker image
        uses: docker/build-push-action@v5
        with:
          context: ./server
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/dockerhub-server:latest

  deploy:
    runs-on: ubuntu-latest
    needs: [build-client, build-server]
    steps:
      - name: Remove old container
        run: |
          if [ $(docker ps -aq -f name=sd_container) ]; then
            docker stop sd_container
            docker rm sd_container
          fi
      - name: webfactory/ssh-agent
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY2 }}
      - name: Adding our prod server to known hosts
        run: ssh-keyscan -H ${{ secrets.DEPLOY_SSH_HOST }} >> ~/.ssh/known_hosts
      - name: Login with SSH, aka run deployment script on the server
        run: ssh -tt ${{ secrets.DEPLOY_SSH_USERNAME }}@${{ secrets.DEPLOY_SSH_HOST }}
