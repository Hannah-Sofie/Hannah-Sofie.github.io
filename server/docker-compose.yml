version: "3.9"

services:
  client:
    image: client-image
    labels:
      cool.example: "client service"
    depends_on:
      - server
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - ${APP_PORT}:${APP_PORT}
    restart: on-failure
    env_file:
      - .env
    logging:
      driver: "local"
      options:
        max-size: "10m"
        max-file: "5"
    networks:
      - sd-network

  server:
    image: server-image
    ports:
      - "8093:8093"
    labels:
      cool.example: "server service"
    depends_on:
      mongo:
        condition: service_healthy
    build:
      context: ./server
      dockerfile: Dockerfile
    environment:
      MONGO_INITDB_ROOT_PASSWORD_FILE: /run/secrets/mongo_admin_pwd
    restart: on-failure
    env_file:
      - .mongo.env
      - .env
    logging:
      driver: "local"
      options:
        max-size: "10m"
        max-file: "5"
    networks:
      - sd-network

  mongo:
    image: mongo:latest
    container_name: sd_container
    expose:
      - "${MONGO_PORT}"
    environment:
      MONGO_INITDB_ROOT_PASSWORD_FILE: /run/secrets/mongo_admin_pwd
    deploy:
      labels:
        example.label: This is a pointless label
      restart_policy:
        condition: on-failure
        delay: 3s
        max_attempts: 10
      resources:
        limits:
          cpus: "0.75"
          memory: 175M
        reservations:
          cpus: "0.25"
          memory: 75M
    secrets:
      - mongo_admin_pwd
    healthcheck:
      test: mongosh --eval "db.adminCommand('ping').ok"
      interval: 6s
      timeout: 5s
      retries: 3
    env_file: .mongo.env
    networks:
      sd-network:
        aliases:
          - ${MONGO_HOSTNAME}
    logging:
      driver: "local"
      options:
        max-size: 10M
        max-file: 5
    volumes:
      - mongo-data:/data/db

volumes:
  mongo-data:

secrets:
  mongo_admin_pwd:
    file: ./secrets.folder/mongo_admin_pwd.txt

networks:
  sd-network:
    name: sd-network
